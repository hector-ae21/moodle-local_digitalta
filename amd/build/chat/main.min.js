define("local_digitalta/chat/main",["exports","jquery","core/templates","core/notification","local_digitalta/chat/selectors","local_digitalta/repositories/chat_repository","local_digitalta/chat/listeners","local_digitalta/chat/status"],(function(_exports,_jquery,_templates,_notification,_selectors,_chat_repository,_listeners,_status){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=function(target){let experienceid=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,single=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return _selectors.default.TARGET=target,void initComponent(experienceid,single)},_exports.handleSendMessage=async function(){const message=(0,_jquery.default)(_selectors.default.INPUTS.CHAT_REPLY).val().trim();return void(0,_chat_repository.chatsSendMessage)({chatid:_selectors.default.OPEN_CHAT_ID,message:message}).then((()=>{(0,_jquery.default)(_selectors.default.INPUTS.CHAT_REPLY).val(""),async function(message){const date=Math.floor(Date.now()/1e3);handlerNewOtherMessage([{message:message,timecreated:date,is_mine:!0}])}(message)})).fail(_notification.default.exception)},_exports.handlerMessages=handlerMessages,_exports.handlerNewOtherMessage=handlerNewOtherMessage,_exports.openChatFromExperience=openChatFromExperience,_exports.reloaderMessages=reloaderMessages,_exports.renderChat=renderChat,_exports.renderMenuChat=renderMenuChat,_exports.renderMenuTutor=async function(){_templates.default.render(_selectors.default.TEMPLATES.MENU_MENTOR,{}).then((html=>{(0,_jquery.default)(_selectors.default.TARGET).html(html)})).fail(_notification.default.exception)},_exports.renderMessage=renderMessage,_exports.renderSingleChat=renderSingleChat,_jquery=_interopRequireDefault(_jquery),_templates=_interopRequireDefault(_templates),_notification=_interopRequireDefault(_notification),_selectors=_interopRequireDefault(_selectors),_listeners=_interopRequireDefault(_listeners);const status=new((_status=_interopRequireDefault(_status)).default);const initComponent=async(experienceid,single)=>{(0,_listeners.default)(),experienceid?openChatFromExperience(experienceid,single):renderMenuChat(),setInterval(reloaderMessages,1e3)};async function renderMenuChat(){const{chatrooms:chatrooms}=await(0,_chat_repository.chatsGetRooms)({experienceid:0}),chats=chatrooms.filter((chat=>!0===chat.ownexperience)),tutoringChats=chatrooms.filter((chat=>!1===chat.ownexperience));_templates.default.render(_selectors.default.TEMPLATES.MENU_CHAT,{tutoringChats:{length:tutoringChats.length,chats:tutoringChats,unread:tutoringChats.filter((chat=>chat.unread_messages>0)).length},chats:{length:chats.length,chats:chats,unread:chats.filter((chat=>chat.unread_messages>0)).length},isEmpty:0===tutoringChats.length&&0===chats.length,wwwroot:M.cfg.wwwroot}).then((html=>{(0,_jquery.default)(_selectors.default.TARGET).html(html),status.emptyActiveMessages(),_selectors.default.OPEN_CHAT_ID=0})).fail(_notification.default.exception)}async function renderSingleChat(id){let hideBack=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const{messages:messages}=await(0,_chat_repository.chatsGetMessage)({chatid:id});_selectors.default.OPEN_CHAT_ID=id,_templates.default.render(_selectors.default.TEMPLATES.SINGLE_CHAT,{hideBack:hideBack}).then((html=>{(0,_jquery.default)(_selectors.default.TARGET).html(html),handlerMessages(messages),status.activeMessages=messages})).fail(_notification.default.exception)}async function renderChat(id){let hideBack=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const{messages:messages,chatroom:chatroom}=await(0,_chat_repository.chatsGetMessage)({chatid:id});_selectors.default.OPEN_CHAT_ID=id,_templates.default.render(_selectors.default.TEMPLATES.CHAT,{hideBack:hideBack,chatroom:chatroom}).then((html=>{(0,_jquery.default)(_selectors.default.TARGET).html(html),handlerMessages(messages),status.activeMessages=messages})).fail(_notification.default.exception),await(0,_chat_repository.markMessagesAsRead)({chatid:id})}async function handlerMessages(messages){let html="";const promises=messages.map((msg=>{const{message:message,timecreated:timecreated,is_mine:is_mine,userfullname:userfullname,userpicture:userpicture}=msg;return renderMessage(message,timecreated,is_mine,userfullname,userpicture)}));try{html=(await Promise.all(promises)).join(""),(0,_jquery.default)(_selectors.default.CONTAINERS.MESSAGES).html(html)}catch(error){_notification.default.exception(error)}}async function reloaderMessages(){if(_selectors.default.OPEN_CHAT_ID){const{messages:messages}=await(0,_chat_repository.chatsGetMessage)({chatid:_selectors.default.OPEN_CHAT_ID});handlerNewOtherMessage(messages)}else;}async function handlerNewOtherMessage(messages){const newMessages=(arr1=messages,arr2=status.activeMessages,arr1.filter((objeto1=>!arr2.some((objeto2=>function(objeto1,objeto2){return objeto1.message===objeto2.message&&objeto1.timecreated===objeto2.timecreated}(objeto1,objeto2))))));var arr1,arr2;const promises=newMessages.map((msg=>{const{message:message,timecreated:timecreated,is_mine:is_mine,userfullname:userfullname,userpicture:userpicture}=msg;return status.activeMessages.push(msg),renderMessage(message,timecreated,is_mine,userfullname,userpicture)}));newMessages.length>0&&await(0,_chat_repository.markMessagesAsRead)({chatid:_selectors.default.OPEN_CHAT_ID,messageids:newMessages.map((msg=>msg.id))});try{const html=(await Promise.all(promises)).join("");(0,_jquery.default)(_selectors.default.CONTAINERS.MESSAGES).append(html)}catch(error){_notification.default.exception(error)}}async function renderMessage(text,time,mine){let userfullname=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",userpicture=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";const TEMPLATE=mine?_selectors.default.TEMPLATES.MY_MESSAGE:_selectors.default.TEMPLATES.OTHER_MESSAGE,timeInMilliseconds=1e3*time;let dateString="";timeInMilliseconds<Date.now()-864e5&&(dateString=new Date(timeInMilliseconds).toLocaleDateString());const timeString=new Date(1e3*time).toLocaleTimeString([],{hour12:!1,hour:"2-digit",minute:"2-digit"}),dateTimeString=dateString?"".concat(dateString," ").concat(timeString):timeString;return _templates.default.render(TEMPLATE,{text:text,time:dateTimeString,userfullname:userfullname,userpicture:userpicture})}async function openChatFromExperience(experienceid){let single=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const{chatrooms:chatrooms}=await(0,_chat_repository.chatsGetRooms)({experienceid:experienceid});0!==chatrooms.length&&(single?renderSingleChat(chatrooms[0].id,!0):renderChat(experienceid))}return _exports.default}));

//# sourceMappingURL=main.min.js.map