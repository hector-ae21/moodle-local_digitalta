{"version":3,"file":"provider.min.js","sources":["../../src/experiences/provider.js"],"sourcesContent":["import { exception as displayException } from 'core/notification';\nimport Templates from 'core/templates';\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nlet pages = 0;\n\nlet filters = [];\nlet selectedPage = 1;\nexport const init = () => {\n    getAndRenderFilters();\n    getExperiences();\n\n    $('[data-section-name=\"digitalta-experiences-list\"] .dropdown-menu').on('click', function (e) {\n        e.stopPropagation();\n    });\n\n    $(document).on(\"click\", \"li.page-item.page-link.page\", function () {\n        const clickedPage = $(this).attr('attr-page');\n        if (selectedPage !== clickedPage) {\n            selectedPage = parseInt(clickedPage);\n            getExperiences();\n        }\n    });\n    $(document).on(\"click\", \"li.page-item.page-link.state\", function () {\n        const state = $(this).attr('aria-label');\n        if (state === 'Next') {\n            const posibleNextPage = selectedPage + 1;\n            if (posibleNextPage > 0 && posibleNextPage <= pages) {\n                selectedPage++;\n                getExperiences();\n            }\n        } else if (state === 'Previous') {\n            const posiblePreviousPage = selectedPage - 1;\n            if (posiblePreviousPage > 0 && posiblePreviousPage <= pages) {\n                selectedPage--;\n                getExperiences();\n            }\n        }\n    });\n\n    $(document).on(\"change\", \".filterThemeSelect\", function () {\n        const selectedValue = $(\"option:selected.enable\", this).val();\n        const selectedText = $(\"option:selected.enable\", this).text();\n        if (selectedText.length > 0) {\n            const element = $(\"option:selected.enable\", this);\n            element.addClass('disabled');\n            element.removeClass('enable');\n            const filterObject = { \"type\": \"theme\", \"value\": { id: selectedValue, name: selectedText } };\n            setFilter(filterObject);\n            $(\".filterThemeSelect option:first\").prop(\"selected\", true);\n            $(element).prop('disabled', true);\n        }\n    });\n\n    $(document).on(\"change\", \".filterLanguageSelect\", function () {\n        const selectedText = $(\"option:selected.enable\", this).text();\n        if (selectedText.length > 0) {\n            const element = $(\"option:selected.enable\", this);\n            element.addClass('disabled');\n            element.removeClass('enable');\n            const filterObject = { \"type\": \"language\", \"value\": selectedText };\n            setFilter(filterObject);\n            $(\".filterLanguageSelect option:first\").prop(\"selected\", true);\n            $(element).prop('disabled', true);\n        }\n    });\n\n    $(document).on(\"keydown\", \"#inlineFormInputGroup\", function (event) {\n        // Verificamos si la tecla Enter fue presionada (keyCode 13 o event.which 13)\n        if (event.key === \"Enter\" || event.keyCode === 13) {\n            const filterText = $(this).val(); // Obtenemos el valor del input\n            const filterObject = { \"type\": \"tag\", \"value\": filterText };\n            setFilter(filterObject);\n            $(this).val(''); // Limpiamos el input\n        }\n    });\n\n    $(document).on(\"keydown\", \"#authorFilters\", async function () {\n        const filterText = $(this).val(); // Obtenemos el valor del input\n        const request = {\n            methodname: 'core_enrol_get_potential_users',\n            args: { courseid: 1, enrolid: 1, page: 0, perpage: 10, search: filterText, searchanywhere: true }\n        };\n        const response = await Ajax.call([request])[0];\n\n        if (response.length === 0) {\n            $(\"#suggestionsAuthors\").empty();\n        } else {\n            const authorsSuggestions = await Templates.renderForPromise('local_digitalta/_common/listAuthors', { users: response });\n            Templates.replaceNodeContents(\"#suggestionsAuthors\", authorsSuggestions.html, authorsSuggestions.js);\n        }\n    });\n\n    $(\"#suggestionsTags\").on(\"click\", \".tag-item\", function () {\n        const filterText = { type: \"tag\", value: $(this).attr('attr-name') };\n        setFilter(filterText);\n        $(\"#inlineFormInputGroup\").val(\"\");\n    });\n\n    $(\"#suggestionsAuthors\").on(\"click\", \".author-item\", function () {\n        const filterText = { type: \"author\", value: { id: $(this).attr('attr-id-user'), name: $(this).attr('attr-name') } };\n        setFilter(filterText);\n        $(\"#authorFilters\").val(\"\");\n    });\n\n\n    $(\"#filters-menu\").on(\"click\", function () {\n        if ($(\".tagsInputFilter\").is(\":focus\")) {\n            $(\"#suggestionsAuthors\").hide();\n            $(\"#suggestionsTags\").show();\n        } else if ($(\"#authorFilters\").is(\":focus\")) {\n            $(\"#suggestionsTags\").hide();\n            $(\"#suggestionsAuthors\").show();\n        } else {\n            $(\"#suggestionsTags\").hide();\n            $(\"#suggestionsAuthors\").hide();\n        }\n    });\n\n    $(document).on(\"click\", \"#removeFilter\", function () {\n        const filterText = $(this).attr('attr-filter');\n        const filterType = $(this).attr('attr-type');\n        const filterObject = { \"type\": filterType, \"value\": filterText };\n        removeFilter(filterObject);\n    });\n};\n\nconst getExperiences = async () => {\n    // Remapeamos la data por el caso especial de authores\n    const mappedFilters = filters.map((filter) => {\n        if (filter.type === 'author' || filter.type === 'theme') {\n            return { type: filter.type, value: filter.value.id };\n        }\n        return filter;\n    });\n\n    const request = {\n        methodname: 'local_digitalta_experiences_get_by_pagination',\n        args: {\n            'pagenumber': selectedPage,\n            'filters': JSON.stringify(mappedFilters)\n        }\n    };\n    const response = await Ajax.call([request])[0];\n\n    if (response.data.length === 0) {\n        Templates.renderForPromise('local_digitalta/_common/empty-view', response).then(({ html, js }) => {\n            Templates.replaceNodeContents(\"#list-experience-body\", html, js);\n        }).catch((error) => displayException(error));\n        $(\".digitalta.pagination\").hide();\n    } else {\n        let obj = {\n            \"experiences\": response,\n            \"viewtagurl\": M.cfg.wwwroot + \"/local/digitalta/pages/tags/view.php?type=tag&id=\",\n            \"viewthemeurl\": M.cfg.wwwroot + \"/local/digitalta/pages/tags/view.php?type=theme&id=\",\n        };\n        let paginationArray = generatePagination(response.pages, selectedPage);\n        pages = response.pages;\n        const experienceList = await Templates.renderForPromise('local_digitalta/experiences/dashboard/experience-list', obj);\n        const pagination = await Templates.renderForPromise(\"local_digitalta/_common/pagination\", {\n            pages: paginationArray,\n            pagesCount: paginationArray.length,\n            currentPage: selectedPage,\n            disablePrevious: selectedPage <= 1,\n            disableNext: selectedPage >= pages,\n        });\n        Templates.replaceNodeContents(\"#list-experience-body\", experienceList.html, experienceList.js);\n        Templates.replaceNodeContents(\"#digital-pagination\", pagination.html, pagination.js);\n        $(\".digitalta.pagination\").show();\n    }\n};\n\nconst generatePagination = (totalPages, selectedPage) => {\n    let pagination = [];\n    for (let i = 0; i < totalPages; i++) {\n        let page = {\n            page: i + 1,\n            selected: i + 1 === selectedPage\n        };\n        pagination.push(page);\n    }\n    return pagination;\n};\n\nconst getAndRenderFilters = async () => {\n    const themesRequest = {\n        methodname: 'local_digitalta_themes_get',\n        args: {}\n    };\n    const tagsRequest = { methodname: 'local_digitalta_tags_get', args: {} };\n    const languagesRequest = { methodname: 'local_digitalta_experiences_get_used_langs', args: {} };\n    const themesResponse = await Ajax.call([themesRequest])[0];\n    const tagsResponse = await Ajax.call([tagsRequest])[0];\n    const languagesResponse = await Ajax.call([languagesRequest])[0];\n\n    // eslint-disable-next-line max-len\n    const templateFilterThemes = await Templates.renderForPromise('local_digitalta/_common/filterTheme', { \"themes\": themesResponse });\n    // eslint-disable-next-line max-len\n    const templateFilterLanguages = await Templates.renderForPromise('local_digitalta/_common/filterLanguages', { \"languages\": languagesResponse });\n    Templates.replaceNodeContents(\"#filterThemeSelect\", templateFilterThemes.html, templateFilterThemes.js);\n    Templates.replaceNodeContents(\"#filterLanguageSelect\", templateFilterLanguages.html, templateFilterLanguages.js);\n\n    const availableTags = tagsResponse.map(function (tag) {\n        return tag.name;\n    });\n\n    // Evento de entrada en el campo de texto\n    $('#inlineFormInputGroup').on('input', async function () {\n        var input = $(this).val().toLowerCase();\n        var suggestions = availableTags.filter(function (tag) {\n            return tag.toLowerCase().startsWith(input);\n        });\n\n        const templateFilterTags = await Templates.renderForPromise('local_digitalta/_common/listTags', { tags: suggestions });\n        Templates.replaceNodeContents(\"#suggestionsTags\", templateFilterTags.html, templateFilterTags.js);\n    });\n};\n\nconst setFilter = (filterObject) => {\n    filters.push(filterObject);\n    selectedPage = 1;\n    renderFilters();\n};\n\nconst removeFilter = (filterObject) => {\n    const index = filters.findIndex((filter) => {\n        if (filter.type === 'author' || filter.type === 'theme') {\n            return filter.type === filterObject.type && filter.value.name === filterObject.value;\n        } else {\n            return filter.type === filterObject.type && filter.value === filterObject.value;\n        }\n    });\n\n    if (index > -1) {\n        if (filterObject.type === 'theme') {\n            let themeSelect = $(\"#filterThemes\");\n            let option = $('option[value=\"' + filters[index].value.id + '\"].disabled', themeSelect);\n            option.removeClass('disabled');\n            option.addClass('enable');\n            $(\"#filterThemes option:first\").prop(\"selected\", true);\n            $(option).prop('disabled', false);\n        } else if (filterObject.type === 'language') {\n            let langSelect = $(\".filterLanguageSelect\");\n            let option = $('option[value=\"' + filterObject.value + '\"].disabled', langSelect);\n            option.removeClass('disabled');\n            option.addClass('enable');\n            $(\".filterLanguageSelect option:first\").prop(\"selected\", true);\n            $(option).prop('disabled', false);\n        }\n        filters.splice(index, 1);\n        selectedPage = 1;\n        renderFilters();\n    }\n};\n\nconst renderFilters = () => {\n    getExperiences();\n    const filtersMap = filters.map((filter) => {\n        if (filter.type === 'author' || filter.type === 'theme') {\n            return { type: filter.type, value: filter.value.name };\n        } else {\n            return { type: filter.type, value: filter.value };\n        }\n    });\n    Templates.renderForPromise('local_digitalta/_common/filterList', { filters: filtersMap }).then(({ html, js }) => {\n        Templates.replaceNodeContents(\"#filtersList\", html, js);\n    }).catch((error) => displayException(error));\n};"],"names":["pages","filters","selectedPage","getAndRenderFilters","getExperiences","on","e","stopPropagation","document","clickedPage","this","attr","parseInt","state","posibleNextPage","posiblePreviousPage","selectedValue","val","selectedText","text","length","element","addClass","removeClass","setFilter","id","name","prop","event","key","keyCode","filterText","async","request","methodname","args","courseid","enrolid","page","perpage","search","searchanywhere","response","Ajax","call","empty","authorsSuggestions","Templates","renderForPromise","users","replaceNodeContents","html","js","type","value","is","hide","show","filterType","removeFilter","mappedFilters","map","filter","JSON","stringify","data","then","_ref","catch","error","obj","M","cfg","wwwroot","paginationArray","generatePagination","experienceList","pagination","pagesCount","currentPage","disablePrevious","disableNext","totalPages","i","selected","push","themesResponse","tagsResponse","languagesResponse","templateFilterThemes","templateFilterLanguages","availableTags","tag","input","toLowerCase","suggestions","startsWith","templateFilterTags","tags","filterObject","renderFilters","index","findIndex","themeSelect","option","langSelect","splice","filtersMap","_ref2"],"mappings":"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"}